package pharmacy;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;

public class Add_customer extends JFrame {

   
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JTable table;
    private JTextField cus_id;
    private JTextField med_pur;
    private JTextField dateField;
    private JTextField quantityField;
    private Connection connection;
    private JTextField textField;
    private JTextField textField_1;

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Add_customer window = new Add_customer();
                    window.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    public Add_customer() {
    	getContentPane().setBackground(new Color(240, 128, 128));
        initialize();
        establishConnection();
    }

    private void initialize() {
        setTitle("Car Details Management");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 786, 669);
        getContentPane().setLayout(null);

        JLabel lblNewLabel = new JLabel("cus_id");
        lblNewLabel.setFont(new Font("Times New Roman", Font.ITALIC, 14));
        lblNewLabel.setBounds(40, 350, 80, 25);
        getContentPane().add(lblNewLabel);

        cus_id = new JTextField();
        cus_id.setBounds(112, 350, 140, 25);
        getContentPane().add(cus_id);
        cus_id.setColumns(10);

        JLabel lblNewLabel_1 = new JLabel("Date");
        lblNewLabel_1.setFont(new Font("Times New Roman", Font.ITALIC, 14));
        lblNewLabel_1.setBounds(270, 350, 80, 25);
        getContentPane().add(lblNewLabel_1);

        med_pur = new JTextField();
        med_pur.setColumns(10);
        med_pur.setBounds(352, 350, 140, 25);
        getContentPane().add(med_pur);

        JLabel lblNewLabel_2 = new JLabel("med_purchased:");
        lblNewLabel_2.setFont(new Font("Times New Roman", Font.ITALIC, 14));
        lblNewLabel_2.setBounds(40, 385, 80, 25);
        getContentPane().add(lblNewLabel_2);

        dateField = new JTextField();
        dateField.setColumns(10);
        dateField.setBounds(112, 380, 140, 25);
        getContentPane().add(dateField);

        JLabel lblNewLabel_3 = new JLabel("quatity");
        lblNewLabel_3.setFont(new Font("Times New Roman", Font.ITALIC, 14));
        lblNewLabel_3.setBounds(270, 380, 80, 25);
        getContentPane().add(lblNewLabel_3);

        quantityField = new JTextField();
        quantityField.setColumns(10);
        quantityField.setBounds(352, 380, 140, 25);
        getContentPane().add(quantityField);

        JButton btnAddCar = new JButton("Add customer");
        btnAddCar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                addCar();
            }
        });
        btnAddCar.setFont(new Font("Cambria", Font.BOLD, 15));
        btnAddCar.setBounds(60, 430, 140, 42);
        getContentPane().add(btnAddCar);

        JButton btnDeleteCar = new JButton(" Delete Customer");
        btnDeleteCar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                deleteCar();
            }
        });
        btnDeleteCar.setFont(new Font("Cambria", Font.BOLD, 15));
        btnDeleteCar.setBounds(220, 430, 157, 42);
        getContentPane().add(btnDeleteCar);

        JButton btnShowTable = new JButton("Show Table");
        btnShowTable.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                displayTable();
            }
        });
        btnShowTable.setFont(new Font("Cambria", Font.BOLD, 15));
        btnShowTable.setBounds(435, 430, 140, 42);
        getContentPane().add(btnShowTable);

        JScrollPane scrollPane = new JScrollPane();
        scrollPane.setBounds(60, 30, 600, 300);
        getContentPane().add(scrollPane);

        table = new JTable();
        scrollPane.setViewportView(table);
        
        textField = new JTextField();
        textField.setBounds(112, 353, 140, 19);
        getContentPane().add(textField);
        textField.setColumns(10);
        
        textField_1 = new JTextField();
        textField_1.setBounds(356, 353, 136, 19);
        getContentPane().add(textField_1);
        textField_1.setColumns(10);
        
        JButton btnNewButton = new JButton("Go Back");
        btnNewButton.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		Dashboard d5=new Dashboard();
        		d5.setVisible(true);
        		dispose();
        	}
        });
        btnNewButton.setBounds(233, 526, 85, 21);
        getContentPane().add(btnNewButton);
    }

    private void establishConnection() {
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            connection = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:ORCL", "hr", "9495558676Th#");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void addCar() {
        String cusid  = cus_id.getText();
        String medpurch = med_pur.getText();
        String dateofpur = dateField.getText();
        String quantity = quantityField.getText();

        try {
            Statement stmt = connection.createStatement();
            String query = "INSERT INTO Customer  VALUES ('" + cusid + "', '" + medpurch + "', '" + dateofpur + "', '" + quantity + "')";
            stmt.executeUpdate(query);
            stmt.close();
            displayTable();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

   private void deleteCar() {
        int selectedRowIndex = table.getSelectedRow();
        if (selectedRowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        String cusid = (String) table.getValueAt(selectedRowIndex, 0);
        try {
            Statement stmt = connection.createStatement();
            String query = "DELETE FROM Customer  WHERE cusid='" + cusid + "'";
            stmt.executeUpdate(query);
            stmt.close();
            displayTable();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void displayTable() {
        try {
            Statement stmt = connection.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM Customer");
            table.setModel(buildTableModel(rs));
            rs.close();
            stmt.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static DefaultTableModel buildTableModel(ResultSet rs) throws SQLException {
        ResultSetMetaData metaData = rs.getMetaData();

        // Column names
        int columnCount = metaData.getColumnCount();
        String[] columnNames = new String[columnCount];
        for (int i = 1; i <= columnCount; i++) {
            columnNames[i - 1] = metaData.getColumnName(i);
        }

        // Data of the table
        DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0);
        while (rs.next()) {
            Object[] rowData = new Object[columnCount];
            for (int i = 1; i <= columnCount; i++) {
                rowData[i - 1] = rs.getObject(i);
            }
            tableModel.addRow(rowData);
        }
        return tableModel;
    }
}